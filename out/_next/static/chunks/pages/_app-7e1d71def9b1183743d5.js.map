{"version":3,"sources":["webpack://_N_E/../../pages/_app.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js"],"names":["p","loadGetInitialProps","pageProps","componentDidCatch","render","this","__N_SSG","url","createUrl","React","Component","router","back","push","pushTo","pushRoute","as","href","pushUrl","replace","replaceTo","replaceRoute","replaceUrl","App","origGetInitialProps","appGetInitialProps","getInitialProps","window","__NEXT_P"],"mappings":"ssBAgFO,SAAmBA,GACxB,EACA,OAAOA,EAAP,U,+BAlFF,mBACA,Y,SAsBA,E,kEAAA,8FAAkC,EAAlC,EAAkC,UAAlC,kBAI0B,IAAAC,qBAAA,EAAxB,GAJF,cAIQC,EAJR,yBAKS,CAAEA,cALX,4C,0GAQe,E,+HAUbC,SAAiB,KACf,U,oBAGFC,WACE,MAA2DC,KAA3D,MAAM,EAAN,EAAM,SAAN,EAAM,YAAN,EAAM,YAAN,EAAM,UAAN,EAAM,QAGN,OACE,6CAKUC,GAAF,EANV,GAMkC,CAAEC,IAAKC,EAA/B,U,GAxB4CC,UAAMC,WAsDzD,SAASF,EAAUG,GAExB,IAAM,EAAN,EAAM,WAAN,EAAM,SAAN,EAAM,MACN,MAAO,CACL,YAEE,UAEF,eAEE,UAEF,aAEE,UAEFC,KAAM,WAEJD,UAEFE,KAAM,cAEJ,OAAOF,SAAP,IAEFG,OAAQ,cAEN,IAAMC,EAAYC,EAAKC,EAAvB,GACMC,EAAUF,GAAhB,EAEA,OAAOL,SAAP,IAEFQ,QAAS,cAEP,OAAOR,YAAP,IAEFS,UAAW,cAET,IAAMC,EAAeL,EAAKC,EAA1B,GACMK,EAAaN,GAAnB,EAEA,OAAOL,YAAP,K,YA9FeY,EAIZC,oBAAsBC,EAJVF,EAKZG,gBAAkBD,G,wBCnCtBE,OAAOC,SAAWD,OAAOC,UAAY,IAAIf,KAAK,CAC7C,QACA,WACE,OAAO,EAAQ,a","file":"static/chunks/pages/_app-7e1d71def9b1183743d5.js","sourcesContent":["import React, { ErrorInfo } from 'react'\nimport {\n  execOnce,\n  loadGetInitialProps,\n  AppContextType,\n  AppInitialProps,\n  AppPropsType,\n  NextWebVitalsMetric,\n} from '../next-server/lib/utils'\nimport { Router } from '../client/router'\n\nexport { AppInitialProps }\n\nexport { NextWebVitalsMetric }\n\nexport type AppContext = AppContextType<Router>\n\nexport type AppProps<P = {}> = AppPropsType<Router, P>\n\n/**\n * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n * This allows for keeping state between navigation, custom error handling, injecting additional data.\n */\nasync function appGetInitialProps({\n  Component,\n  ctx,\n}: AppContext): Promise<AppInitialProps> {\n  const pageProps = await loadGetInitialProps(Component, ctx)\n  return { pageProps }\n}\n\nexport default class App<P = {}, CP = {}, S = {}> extends React.Component<\n  P & AppProps<CP>,\n  S\n> {\n  static origGetInitialProps = appGetInitialProps\n  static getInitialProps = appGetInitialProps\n\n  // Kept here for backwards compatibility.\n  // When someone ended App they could call `super.componentDidCatch`.\n  // @deprecated This method is no longer needed. Errors are caught at the top level\n  componentDidCatch(error: Error, _errorInfo: ErrorInfo): void {\n    throw error\n  }\n\n  render() {\n    const { router, Component, pageProps, __N_SSG, __N_SSP } = this\n      .props as AppProps<CP>\n\n    return (\n      <Component\n        {...pageProps}\n        {\n          // we don't add the legacy URL prop if it's using non-legacy\n          // methods like getStaticProps and getServerSideProps\n          ...(!(__N_SSG || __N_SSP) ? { url: createUrl(router) } : {})\n        }\n      />\n    )\n  }\n}\n\nlet warnContainer: () => void\nlet warnUrl: () => void\n\nif (process.env.NODE_ENV !== 'production') {\n  warnContainer = execOnce(() => {\n    console.warn(\n      `Warning: the \\`Container\\` in \\`_app\\` has been deprecated and should be removed. https://err.sh/vercel/next.js/app-container-deprecated`\n    )\n  })\n\n  warnUrl = execOnce(() => {\n    console.error(\n      `Warning: the 'url' property is deprecated. https://err.sh/vercel/next.js/url-deprecated`\n    )\n  })\n}\n\n// @deprecated noop for now until removal\nexport function Container(p: any) {\n  if (process.env.NODE_ENV !== 'production') warnContainer()\n  return p.children\n}\n\nexport function createUrl(router: Router) {\n  // This is to make sure we don't references the router object at call time\n  const { pathname, asPath, query } = router\n  return {\n    get query() {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return query\n    },\n    get pathname() {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return pathname\n    },\n    get asPath() {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return asPath\n    },\n    back: () => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      router.back()\n    },\n    push: (url: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return router.push(url, as)\n    },\n    pushTo: (href: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      const pushRoute = as ? href : ''\n      const pushUrl = as || href\n\n      return router.push(pushRoute, pushUrl)\n    },\n    replace: (url: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return router.replace(url, as)\n    },\n    replaceTo: (href: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      const replaceRoute = as ? href : ''\n      const replaceUrl = as || href\n\n      return router.replace(replaceRoute, replaceUrl)\n    },\n  }\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return require(\"next/dist/pages/_app\");\n      }\n    ]);\n  "],"sourceRoot":""}